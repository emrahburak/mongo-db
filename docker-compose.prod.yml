networks:
  aprilrain_queue_network:
    driver: bridge
  aprilrain_db_network:
    driver: bridge

volumes:
  aprilrain_mongodb_data:  # Docker volume tanımı

  # ============================
  # Database (mongodb)
  # ============================
#
services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    volumes:
      - aprilrain_mongodb_data:/data/db
     # - /home/helis/Documents/app_data/helis_mongo_data:/data/db
      - /home/helis/Documents/app_data/aprilrain_dump:/tmp/dump
    env_file:
      - ~/Documents/app_environment/mongo.env
    networks:
      - aprilrain_queue_network
      - aprilrain_db_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 10s

  # ============================
  # Web Server  (flask)
  # ============================
  mongo-api:
    build:
      context: ./mongo_api  # Build context'i mongo_api klasörü olarak ayarla
    container_name: mongo-api
    hostname: mongo-api
    restart: always
    ports:
      - "5002:5000"  # Dışarıda 5001, içeride 5000
    environment:
      MONGO_URI: "mongodb://root:hocusfocus@mongodb:27017/"
      API_KEY: hocusfocus
    volumes:
      - ./mongo_api:/app  # Flask uygulamasının dosyalarını container'a bağla
    networks:
      - aprilrain_db_network 
    depends_on:
      - mongodb
 
